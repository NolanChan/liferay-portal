dependencies {
	testCompile project(":apps:forms-and-workflow:portal-reports-engine:portal-reports-engine-api")
	testCompile project(":private:apps:forms-and-workflow:portal-reports-engine:portal-reports-engine-jasper")

	testIntegrationCompile group: "com.liferay", name: "com.liferay.arquillian.extension.junit.bridge", version: "1.0.3"
}

task cleanTestResources(type: Delete)

task extractUpgradedResources(type: Copy)
task buildUpgradedResourcesZip(type: Zip, dependsOn: extractUpgradedResources)
task upgradeTestResources(type: Delete, dependsOn: buildUpgradedResourcesZip)

task unzipTestResources(type: Copy)

def jasperVersion = "5.2.0"

cleanTestResources {
	delete "src/testIntegration/resources/"
}

buildUpgradedResourcesZip {
	includeEmptyDirs = false
	archiveName = "jasperreports-${jasperVersion}-project.zip"

	from ("${buildDir}/temp") {
		include "**/csvdatasource/data/*"
		include "**/csvdatasource/reports/*"
		include "**/xlsdatasource/data/*"
		include "**/xlsdatasource/reports/*"
		include "**/xmldatasource/data/*"
		include "**/xmldatasource/reports/*"
	}

	destinationDir = projectDir
}

extractUpgradedResources {
	from zipTree("jasperreports-${jasperVersion}-project.zip")
	destinationDir = file("${buildDir}/temp")

	rename ("jasperreports-${jasperVersion}-project.zip", "jasperreports-${jasperVersion}-project-old.zip")
}

upgradeTestResources {
	delete "${buildDir}/temp"
	delete "jasperreports-${jasperVersion}-project-old.zip"
}

unzipTestResources {
	def zipFile = file("jasperreports-${jasperVersion}-project.zip")
	def outputDir = file("src/testIntegration/resources")

	from zipTree(zipFile).files
	into outputDir
}

compileJava.dependsOn unzipTestResources
clean.dependsOn cleanTestResources
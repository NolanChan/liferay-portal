/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.osb.lcs.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.osb.lcs.model.LCSInvitation;
import com.liferay.osb.lcs.service.LCSInvitationLocalService;
import com.liferay.osb.lcs.service.persistence.LCSClusterEntryPersistence;
import com.liferay.osb.lcs.service.persistence.LCSClusterEntryTokenPersistence;
import com.liferay.osb.lcs.service.persistence.LCSClusterNodeFinder;
import com.liferay.osb.lcs.service.persistence.LCSClusterNodePersistence;
import com.liferay.osb.lcs.service.persistence.LCSClusterNodeUptimePersistence;
import com.liferay.osb.lcs.service.persistence.LCSInvitationPersistence;
import com.liferay.osb.lcs.service.persistence.LCSMessagePersistence;
import com.liferay.osb.lcs.service.persistence.LCSMetadataPersistence;
import com.liferay.osb.lcs.service.persistence.LCSNotificationAuditEntryPersistence;
import com.liferay.osb.lcs.service.persistence.LCSNotificationPersistence;
import com.liferay.osb.lcs.service.persistence.LCSPatchEntryPersistence;
import com.liferay.osb.lcs.service.persistence.LCSProjectPersistence;
import com.liferay.osb.lcs.service.persistence.LCSRolePersistence;
import com.liferay.osb.lcs.service.persistence.LCSSubscriptionEntryPersistence;
import com.liferay.osb.lcs.service.persistence.UserLCSMessagePersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the l c s invitation local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.osb.lcs.service.impl.LCSInvitationLocalServiceImpl}.
 * </p>
 *
 * @author Igor Beslic
 * @see com.liferay.osb.lcs.service.impl.LCSInvitationLocalServiceImpl
 * @see com.liferay.osb.lcs.service.LCSInvitationLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class LCSInvitationLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements LCSInvitationLocalService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.osb.lcs.service.LCSInvitationLocalServiceUtil} to access the l c s invitation local service.
	 */

	/**
	 * Adds the l c s invitation to the database. Also notifies the appropriate model listeners.
	 *
	 * @param lcsInvitation the l c s invitation
	 * @return the l c s invitation that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public LCSInvitation addLCSInvitation(LCSInvitation lcsInvitation) {
		lcsInvitation.setNew(true);

		return lcsInvitationPersistence.update(lcsInvitation);
	}

	/**
	 * Creates a new l c s invitation with the primary key. Does not add the l c s invitation to the database.
	 *
	 * @param lcsInvitationId the primary key for the new l c s invitation
	 * @return the new l c s invitation
	 */
	@Override
	public LCSInvitation createLCSInvitation(long lcsInvitationId) {
		return lcsInvitationPersistence.create(lcsInvitationId);
	}

	/**
	 * Deletes the l c s invitation with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param lcsInvitationId the primary key of the l c s invitation
	 * @return the l c s invitation that was removed
	 * @throws PortalException if a l c s invitation with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public LCSInvitation deleteLCSInvitation(long lcsInvitationId)
		throws PortalException {
		return lcsInvitationPersistence.remove(lcsInvitationId);
	}

	/**
	 * Deletes the l c s invitation from the database. Also notifies the appropriate model listeners.
	 *
	 * @param lcsInvitation the l c s invitation
	 * @return the l c s invitation that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public LCSInvitation deleteLCSInvitation(LCSInvitation lcsInvitation) {
		return lcsInvitationPersistence.remove(lcsInvitation);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(LCSInvitation.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return lcsInvitationPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.osb.lcs.model.impl.LCSInvitationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return lcsInvitationPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.osb.lcs.model.impl.LCSInvitationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return lcsInvitationPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return lcsInvitationPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return lcsInvitationPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public LCSInvitation fetchLCSInvitation(long lcsInvitationId) {
		return lcsInvitationPersistence.fetchByPrimaryKey(lcsInvitationId);
	}

	/**
	 * Returns the l c s invitation with the primary key.
	 *
	 * @param lcsInvitationId the primary key of the l c s invitation
	 * @return the l c s invitation
	 * @throws PortalException if a l c s invitation with the primary key could not be found
	 */
	@Override
	public LCSInvitation getLCSInvitation(long lcsInvitationId)
		throws PortalException {
		return lcsInvitationPersistence.findByPrimaryKey(lcsInvitationId);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(lcsInvitationLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(LCSInvitation.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("lcsInvitationId");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(lcsInvitationLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(LCSInvitation.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName(
			"lcsInvitationId");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(lcsInvitationLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(LCSInvitation.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("lcsInvitationId");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return lcsInvitationLocalService.deleteLCSInvitation((LCSInvitation)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return lcsInvitationPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the l c s invitations.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.osb.lcs.model.impl.LCSInvitationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of l c s invitations
	 * @param end the upper bound of the range of l c s invitations (not inclusive)
	 * @return the range of l c s invitations
	 */
	@Override
	public List<LCSInvitation> getLCSInvitations(int start, int end) {
		return lcsInvitationPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of l c s invitations.
	 *
	 * @return the number of l c s invitations
	 */
	@Override
	public int getLCSInvitationsCount() {
		return lcsInvitationPersistence.countAll();
	}

	/**
	 * Updates the l c s invitation in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param lcsInvitation the l c s invitation
	 * @return the l c s invitation that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public LCSInvitation updateLCSInvitation(LCSInvitation lcsInvitation) {
		return lcsInvitationPersistence.update(lcsInvitation);
	}

	/**
	 * Returns the l c s cluster entry local service.
	 *
	 * @return the l c s cluster entry local service
	 */
	public com.liferay.osb.lcs.service.LCSClusterEntryLocalService getLCSClusterEntryLocalService() {
		return lcsClusterEntryLocalService;
	}

	/**
	 * Sets the l c s cluster entry local service.
	 *
	 * @param lcsClusterEntryLocalService the l c s cluster entry local service
	 */
	public void setLCSClusterEntryLocalService(
		com.liferay.osb.lcs.service.LCSClusterEntryLocalService lcsClusterEntryLocalService) {
		this.lcsClusterEntryLocalService = lcsClusterEntryLocalService;
	}

	/**
	 * Returns the l c s cluster entry persistence.
	 *
	 * @return the l c s cluster entry persistence
	 */
	public LCSClusterEntryPersistence getLCSClusterEntryPersistence() {
		return lcsClusterEntryPersistence;
	}

	/**
	 * Sets the l c s cluster entry persistence.
	 *
	 * @param lcsClusterEntryPersistence the l c s cluster entry persistence
	 */
	public void setLCSClusterEntryPersistence(
		LCSClusterEntryPersistence lcsClusterEntryPersistence) {
		this.lcsClusterEntryPersistence = lcsClusterEntryPersistence;
	}

	/**
	 * Returns the l c s cluster entry token local service.
	 *
	 * @return the l c s cluster entry token local service
	 */
	public com.liferay.osb.lcs.service.LCSClusterEntryTokenLocalService getLCSClusterEntryTokenLocalService() {
		return lcsClusterEntryTokenLocalService;
	}

	/**
	 * Sets the l c s cluster entry token local service.
	 *
	 * @param lcsClusterEntryTokenLocalService the l c s cluster entry token local service
	 */
	public void setLCSClusterEntryTokenLocalService(
		com.liferay.osb.lcs.service.LCSClusterEntryTokenLocalService lcsClusterEntryTokenLocalService) {
		this.lcsClusterEntryTokenLocalService = lcsClusterEntryTokenLocalService;
	}

	/**
	 * Returns the l c s cluster entry token persistence.
	 *
	 * @return the l c s cluster entry token persistence
	 */
	public LCSClusterEntryTokenPersistence getLCSClusterEntryTokenPersistence() {
		return lcsClusterEntryTokenPersistence;
	}

	/**
	 * Sets the l c s cluster entry token persistence.
	 *
	 * @param lcsClusterEntryTokenPersistence the l c s cluster entry token persistence
	 */
	public void setLCSClusterEntryTokenPersistence(
		LCSClusterEntryTokenPersistence lcsClusterEntryTokenPersistence) {
		this.lcsClusterEntryTokenPersistence = lcsClusterEntryTokenPersistence;
	}

	/**
	 * Returns the l c s cluster node local service.
	 *
	 * @return the l c s cluster node local service
	 */
	public com.liferay.osb.lcs.service.LCSClusterNodeLocalService getLCSClusterNodeLocalService() {
		return lcsClusterNodeLocalService;
	}

	/**
	 * Sets the l c s cluster node local service.
	 *
	 * @param lcsClusterNodeLocalService the l c s cluster node local service
	 */
	public void setLCSClusterNodeLocalService(
		com.liferay.osb.lcs.service.LCSClusterNodeLocalService lcsClusterNodeLocalService) {
		this.lcsClusterNodeLocalService = lcsClusterNodeLocalService;
	}

	/**
	 * Returns the l c s cluster node persistence.
	 *
	 * @return the l c s cluster node persistence
	 */
	public LCSClusterNodePersistence getLCSClusterNodePersistence() {
		return lcsClusterNodePersistence;
	}

	/**
	 * Sets the l c s cluster node persistence.
	 *
	 * @param lcsClusterNodePersistence the l c s cluster node persistence
	 */
	public void setLCSClusterNodePersistence(
		LCSClusterNodePersistence lcsClusterNodePersistence) {
		this.lcsClusterNodePersistence = lcsClusterNodePersistence;
	}

	/**
	 * Returns the l c s cluster node finder.
	 *
	 * @return the l c s cluster node finder
	 */
	public LCSClusterNodeFinder getLCSClusterNodeFinder() {
		return lcsClusterNodeFinder;
	}

	/**
	 * Sets the l c s cluster node finder.
	 *
	 * @param lcsClusterNodeFinder the l c s cluster node finder
	 */
	public void setLCSClusterNodeFinder(
		LCSClusterNodeFinder lcsClusterNodeFinder) {
		this.lcsClusterNodeFinder = lcsClusterNodeFinder;
	}

	/**
	 * Returns the l c s cluster node uptime local service.
	 *
	 * @return the l c s cluster node uptime local service
	 */
	public com.liferay.osb.lcs.service.LCSClusterNodeUptimeLocalService getLCSClusterNodeUptimeLocalService() {
		return lcsClusterNodeUptimeLocalService;
	}

	/**
	 * Sets the l c s cluster node uptime local service.
	 *
	 * @param lcsClusterNodeUptimeLocalService the l c s cluster node uptime local service
	 */
	public void setLCSClusterNodeUptimeLocalService(
		com.liferay.osb.lcs.service.LCSClusterNodeUptimeLocalService lcsClusterNodeUptimeLocalService) {
		this.lcsClusterNodeUptimeLocalService = lcsClusterNodeUptimeLocalService;
	}

	/**
	 * Returns the l c s cluster node uptime persistence.
	 *
	 * @return the l c s cluster node uptime persistence
	 */
	public LCSClusterNodeUptimePersistence getLCSClusterNodeUptimePersistence() {
		return lcsClusterNodeUptimePersistence;
	}

	/**
	 * Sets the l c s cluster node uptime persistence.
	 *
	 * @param lcsClusterNodeUptimePersistence the l c s cluster node uptime persistence
	 */
	public void setLCSClusterNodeUptimePersistence(
		LCSClusterNodeUptimePersistence lcsClusterNodeUptimePersistence) {
		this.lcsClusterNodeUptimePersistence = lcsClusterNodeUptimePersistence;
	}

	/**
	 * Returns the l c s invitation local service.
	 *
	 * @return the l c s invitation local service
	 */
	public LCSInvitationLocalService getLCSInvitationLocalService() {
		return lcsInvitationLocalService;
	}

	/**
	 * Sets the l c s invitation local service.
	 *
	 * @param lcsInvitationLocalService the l c s invitation local service
	 */
	public void setLCSInvitationLocalService(
		LCSInvitationLocalService lcsInvitationLocalService) {
		this.lcsInvitationLocalService = lcsInvitationLocalService;
	}

	/**
	 * Returns the l c s invitation persistence.
	 *
	 * @return the l c s invitation persistence
	 */
	public LCSInvitationPersistence getLCSInvitationPersistence() {
		return lcsInvitationPersistence;
	}

	/**
	 * Sets the l c s invitation persistence.
	 *
	 * @param lcsInvitationPersistence the l c s invitation persistence
	 */
	public void setLCSInvitationPersistence(
		LCSInvitationPersistence lcsInvitationPersistence) {
		this.lcsInvitationPersistence = lcsInvitationPersistence;
	}

	/**
	 * Returns the l c s members local service.
	 *
	 * @return the l c s members local service
	 */
	public com.liferay.osb.lcs.service.LCSMembersLocalService getLCSMembersLocalService() {
		return lcsMembersLocalService;
	}

	/**
	 * Sets the l c s members local service.
	 *
	 * @param lcsMembersLocalService the l c s members local service
	 */
	public void setLCSMembersLocalService(
		com.liferay.osb.lcs.service.LCSMembersLocalService lcsMembersLocalService) {
		this.lcsMembersLocalService = lcsMembersLocalService;
	}

	/**
	 * Returns the l c s message local service.
	 *
	 * @return the l c s message local service
	 */
	public com.liferay.osb.lcs.service.LCSMessageLocalService getLCSMessageLocalService() {
		return lcsMessageLocalService;
	}

	/**
	 * Sets the l c s message local service.
	 *
	 * @param lcsMessageLocalService the l c s message local service
	 */
	public void setLCSMessageLocalService(
		com.liferay.osb.lcs.service.LCSMessageLocalService lcsMessageLocalService) {
		this.lcsMessageLocalService = lcsMessageLocalService;
	}

	/**
	 * Returns the l c s message persistence.
	 *
	 * @return the l c s message persistence
	 */
	public LCSMessagePersistence getLCSMessagePersistence() {
		return lcsMessagePersistence;
	}

	/**
	 * Sets the l c s message persistence.
	 *
	 * @param lcsMessagePersistence the l c s message persistence
	 */
	public void setLCSMessagePersistence(
		LCSMessagePersistence lcsMessagePersistence) {
		this.lcsMessagePersistence = lcsMessagePersistence;
	}

	/**
	 * Returns the l c s metadata local service.
	 *
	 * @return the l c s metadata local service
	 */
	public com.liferay.osb.lcs.service.LCSMetadataLocalService getLCSMetadataLocalService() {
		return lcsMetadataLocalService;
	}

	/**
	 * Sets the l c s metadata local service.
	 *
	 * @param lcsMetadataLocalService the l c s metadata local service
	 */
	public void setLCSMetadataLocalService(
		com.liferay.osb.lcs.service.LCSMetadataLocalService lcsMetadataLocalService) {
		this.lcsMetadataLocalService = lcsMetadataLocalService;
	}

	/**
	 * Returns the l c s metadata persistence.
	 *
	 * @return the l c s metadata persistence
	 */
	public LCSMetadataPersistence getLCSMetadataPersistence() {
		return lcsMetadataPersistence;
	}

	/**
	 * Sets the l c s metadata persistence.
	 *
	 * @param lcsMetadataPersistence the l c s metadata persistence
	 */
	public void setLCSMetadataPersistence(
		LCSMetadataPersistence lcsMetadataPersistence) {
		this.lcsMetadataPersistence = lcsMetadataPersistence;
	}

	/**
	 * Returns the l c s notification local service.
	 *
	 * @return the l c s notification local service
	 */
	public com.liferay.osb.lcs.service.LCSNotificationLocalService getLCSNotificationLocalService() {
		return lcsNotificationLocalService;
	}

	/**
	 * Sets the l c s notification local service.
	 *
	 * @param lcsNotificationLocalService the l c s notification local service
	 */
	public void setLCSNotificationLocalService(
		com.liferay.osb.lcs.service.LCSNotificationLocalService lcsNotificationLocalService) {
		this.lcsNotificationLocalService = lcsNotificationLocalService;
	}

	/**
	 * Returns the l c s notification persistence.
	 *
	 * @return the l c s notification persistence
	 */
	public LCSNotificationPersistence getLCSNotificationPersistence() {
		return lcsNotificationPersistence;
	}

	/**
	 * Sets the l c s notification persistence.
	 *
	 * @param lcsNotificationPersistence the l c s notification persistence
	 */
	public void setLCSNotificationPersistence(
		LCSNotificationPersistence lcsNotificationPersistence) {
		this.lcsNotificationPersistence = lcsNotificationPersistence;
	}

	/**
	 * Returns the l c s notification audit entry local service.
	 *
	 * @return the l c s notification audit entry local service
	 */
	public com.liferay.osb.lcs.service.LCSNotificationAuditEntryLocalService getLCSNotificationAuditEntryLocalService() {
		return lcsNotificationAuditEntryLocalService;
	}

	/**
	 * Sets the l c s notification audit entry local service.
	 *
	 * @param lcsNotificationAuditEntryLocalService the l c s notification audit entry local service
	 */
	public void setLCSNotificationAuditEntryLocalService(
		com.liferay.osb.lcs.service.LCSNotificationAuditEntryLocalService lcsNotificationAuditEntryLocalService) {
		this.lcsNotificationAuditEntryLocalService = lcsNotificationAuditEntryLocalService;
	}

	/**
	 * Returns the l c s notification audit entry persistence.
	 *
	 * @return the l c s notification audit entry persistence
	 */
	public LCSNotificationAuditEntryPersistence getLCSNotificationAuditEntryPersistence() {
		return lcsNotificationAuditEntryPersistence;
	}

	/**
	 * Sets the l c s notification audit entry persistence.
	 *
	 * @param lcsNotificationAuditEntryPersistence the l c s notification audit entry persistence
	 */
	public void setLCSNotificationAuditEntryPersistence(
		LCSNotificationAuditEntryPersistence lcsNotificationAuditEntryPersistence) {
		this.lcsNotificationAuditEntryPersistence = lcsNotificationAuditEntryPersistence;
	}

	/**
	 * Returns the l c s patch entry local service.
	 *
	 * @return the l c s patch entry local service
	 */
	public com.liferay.osb.lcs.service.LCSPatchEntryLocalService getLCSPatchEntryLocalService() {
		return lcsPatchEntryLocalService;
	}

	/**
	 * Sets the l c s patch entry local service.
	 *
	 * @param lcsPatchEntryLocalService the l c s patch entry local service
	 */
	public void setLCSPatchEntryLocalService(
		com.liferay.osb.lcs.service.LCSPatchEntryLocalService lcsPatchEntryLocalService) {
		this.lcsPatchEntryLocalService = lcsPatchEntryLocalService;
	}

	/**
	 * Returns the l c s patch entry persistence.
	 *
	 * @return the l c s patch entry persistence
	 */
	public LCSPatchEntryPersistence getLCSPatchEntryPersistence() {
		return lcsPatchEntryPersistence;
	}

	/**
	 * Sets the l c s patch entry persistence.
	 *
	 * @param lcsPatchEntryPersistence the l c s patch entry persistence
	 */
	public void setLCSPatchEntryPersistence(
		LCSPatchEntryPersistence lcsPatchEntryPersistence) {
		this.lcsPatchEntryPersistence = lcsPatchEntryPersistence;
	}

	/**
	 * Returns the l c s project local service.
	 *
	 * @return the l c s project local service
	 */
	public com.liferay.osb.lcs.service.LCSProjectLocalService getLCSProjectLocalService() {
		return lcsProjectLocalService;
	}

	/**
	 * Sets the l c s project local service.
	 *
	 * @param lcsProjectLocalService the l c s project local service
	 */
	public void setLCSProjectLocalService(
		com.liferay.osb.lcs.service.LCSProjectLocalService lcsProjectLocalService) {
		this.lcsProjectLocalService = lcsProjectLocalService;
	}

	/**
	 * Returns the l c s project persistence.
	 *
	 * @return the l c s project persistence
	 */
	public LCSProjectPersistence getLCSProjectPersistence() {
		return lcsProjectPersistence;
	}

	/**
	 * Sets the l c s project persistence.
	 *
	 * @param lcsProjectPersistence the l c s project persistence
	 */
	public void setLCSProjectPersistence(
		LCSProjectPersistence lcsProjectPersistence) {
		this.lcsProjectPersistence = lcsProjectPersistence;
	}

	/**
	 * Returns the l c s role local service.
	 *
	 * @return the l c s role local service
	 */
	public com.liferay.osb.lcs.service.LCSRoleLocalService getLCSRoleLocalService() {
		return lcsRoleLocalService;
	}

	/**
	 * Sets the l c s role local service.
	 *
	 * @param lcsRoleLocalService the l c s role local service
	 */
	public void setLCSRoleLocalService(
		com.liferay.osb.lcs.service.LCSRoleLocalService lcsRoleLocalService) {
		this.lcsRoleLocalService = lcsRoleLocalService;
	}

	/**
	 * Returns the l c s role persistence.
	 *
	 * @return the l c s role persistence
	 */
	public LCSRolePersistence getLCSRolePersistence() {
		return lcsRolePersistence;
	}

	/**
	 * Sets the l c s role persistence.
	 *
	 * @param lcsRolePersistence the l c s role persistence
	 */
	public void setLCSRolePersistence(LCSRolePersistence lcsRolePersistence) {
		this.lcsRolePersistence = lcsRolePersistence;
	}

	/**
	 * Returns the l c s subscription entry local service.
	 *
	 * @return the l c s subscription entry local service
	 */
	public com.liferay.osb.lcs.service.LCSSubscriptionEntryLocalService getLCSSubscriptionEntryLocalService() {
		return lcsSubscriptionEntryLocalService;
	}

	/**
	 * Sets the l c s subscription entry local service.
	 *
	 * @param lcsSubscriptionEntryLocalService the l c s subscription entry local service
	 */
	public void setLCSSubscriptionEntryLocalService(
		com.liferay.osb.lcs.service.LCSSubscriptionEntryLocalService lcsSubscriptionEntryLocalService) {
		this.lcsSubscriptionEntryLocalService = lcsSubscriptionEntryLocalService;
	}

	/**
	 * Returns the l c s subscription entry persistence.
	 *
	 * @return the l c s subscription entry persistence
	 */
	public LCSSubscriptionEntryPersistence getLCSSubscriptionEntryPersistence() {
		return lcsSubscriptionEntryPersistence;
	}

	/**
	 * Sets the l c s subscription entry persistence.
	 *
	 * @param lcsSubscriptionEntryPersistence the l c s subscription entry persistence
	 */
	public void setLCSSubscriptionEntryPersistence(
		LCSSubscriptionEntryPersistence lcsSubscriptionEntryPersistence) {
		this.lcsSubscriptionEntryPersistence = lcsSubscriptionEntryPersistence;
	}

	/**
	 * Returns the user l c s message local service.
	 *
	 * @return the user l c s message local service
	 */
	public com.liferay.osb.lcs.service.UserLCSMessageLocalService getUserLCSMessageLocalService() {
		return userLCSMessageLocalService;
	}

	/**
	 * Sets the user l c s message local service.
	 *
	 * @param userLCSMessageLocalService the user l c s message local service
	 */
	public void setUserLCSMessageLocalService(
		com.liferay.osb.lcs.service.UserLCSMessageLocalService userLCSMessageLocalService) {
		this.userLCSMessageLocalService = userLCSMessageLocalService;
	}

	/**
	 * Returns the user l c s message persistence.
	 *
	 * @return the user l c s message persistence
	 */
	public UserLCSMessagePersistence getUserLCSMessagePersistence() {
		return userLCSMessagePersistence;
	}

	/**
	 * Sets the user l c s message persistence.
	 *
	 * @param userLCSMessagePersistence the user l c s message persistence
	 */
	public void setUserLCSMessagePersistence(
		UserLCSMessagePersistence userLCSMessagePersistence) {
		this.userLCSMessagePersistence = userLCSMessagePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("com.liferay.osb.lcs.model.LCSInvitation",
			lcsInvitationLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"com.liferay.osb.lcs.model.LCSInvitation");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return LCSInvitationLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return LCSInvitation.class;
	}

	protected String getModelClassName() {
		return LCSInvitation.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = lcsInvitationPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.osb.lcs.service.LCSClusterEntryLocalService.class)
	protected com.liferay.osb.lcs.service.LCSClusterEntryLocalService lcsClusterEntryLocalService;
	@BeanReference(type = LCSClusterEntryPersistence.class)
	protected LCSClusterEntryPersistence lcsClusterEntryPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSClusterEntryTokenLocalService.class)
	protected com.liferay.osb.lcs.service.LCSClusterEntryTokenLocalService lcsClusterEntryTokenLocalService;
	@BeanReference(type = LCSClusterEntryTokenPersistence.class)
	protected LCSClusterEntryTokenPersistence lcsClusterEntryTokenPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSClusterNodeLocalService.class)
	protected com.liferay.osb.lcs.service.LCSClusterNodeLocalService lcsClusterNodeLocalService;
	@BeanReference(type = LCSClusterNodePersistence.class)
	protected LCSClusterNodePersistence lcsClusterNodePersistence;
	@BeanReference(type = LCSClusterNodeFinder.class)
	protected LCSClusterNodeFinder lcsClusterNodeFinder;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSClusterNodeUptimeLocalService.class)
	protected com.liferay.osb.lcs.service.LCSClusterNodeUptimeLocalService lcsClusterNodeUptimeLocalService;
	@BeanReference(type = LCSClusterNodeUptimePersistence.class)
	protected LCSClusterNodeUptimePersistence lcsClusterNodeUptimePersistence;
	@BeanReference(type = LCSInvitationLocalService.class)
	protected LCSInvitationLocalService lcsInvitationLocalService;
	@BeanReference(type = LCSInvitationPersistence.class)
	protected LCSInvitationPersistence lcsInvitationPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSMembersLocalService.class)
	protected com.liferay.osb.lcs.service.LCSMembersLocalService lcsMembersLocalService;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSMessageLocalService.class)
	protected com.liferay.osb.lcs.service.LCSMessageLocalService lcsMessageLocalService;
	@BeanReference(type = LCSMessagePersistence.class)
	protected LCSMessagePersistence lcsMessagePersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSMetadataLocalService.class)
	protected com.liferay.osb.lcs.service.LCSMetadataLocalService lcsMetadataLocalService;
	@BeanReference(type = LCSMetadataPersistence.class)
	protected LCSMetadataPersistence lcsMetadataPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSNotificationLocalService.class)
	protected com.liferay.osb.lcs.service.LCSNotificationLocalService lcsNotificationLocalService;
	@BeanReference(type = LCSNotificationPersistence.class)
	protected LCSNotificationPersistence lcsNotificationPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSNotificationAuditEntryLocalService.class)
	protected com.liferay.osb.lcs.service.LCSNotificationAuditEntryLocalService lcsNotificationAuditEntryLocalService;
	@BeanReference(type = LCSNotificationAuditEntryPersistence.class)
	protected LCSNotificationAuditEntryPersistence lcsNotificationAuditEntryPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSPatchEntryLocalService.class)
	protected com.liferay.osb.lcs.service.LCSPatchEntryLocalService lcsPatchEntryLocalService;
	@BeanReference(type = LCSPatchEntryPersistence.class)
	protected LCSPatchEntryPersistence lcsPatchEntryPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSProjectLocalService.class)
	protected com.liferay.osb.lcs.service.LCSProjectLocalService lcsProjectLocalService;
	@BeanReference(type = LCSProjectPersistence.class)
	protected LCSProjectPersistence lcsProjectPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSRoleLocalService.class)
	protected com.liferay.osb.lcs.service.LCSRoleLocalService lcsRoleLocalService;
	@BeanReference(type = LCSRolePersistence.class)
	protected LCSRolePersistence lcsRolePersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.LCSSubscriptionEntryLocalService.class)
	protected com.liferay.osb.lcs.service.LCSSubscriptionEntryLocalService lcsSubscriptionEntryLocalService;
	@BeanReference(type = LCSSubscriptionEntryPersistence.class)
	protected LCSSubscriptionEntryPersistence lcsSubscriptionEntryPersistence;
	@BeanReference(type = com.liferay.osb.lcs.service.UserLCSMessageLocalService.class)
	protected com.liferay.osb.lcs.service.UserLCSMessageLocalService userLCSMessageLocalService;
	@BeanReference(type = UserLCSMessagePersistence.class)
	protected UserLCSMessagePersistence userLCSMessagePersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
}
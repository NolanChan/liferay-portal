/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.osb.lcs.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.osb.lcs.model.LCSProject;
import com.liferay.osb.lcs.model.LCSProjectModel;
import com.liferay.osb.lcs.model.LCSProjectSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LCSProject service. Represents a row in the &quot;OSBLCS_LCSProject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link LCSProjectModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LCSProjectImpl}.
 * </p>
 *
 * @author Igor Beslic
 * @see LCSProjectImpl
 * @see LCSProject
 * @see LCSProjectModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class LCSProjectModelImpl extends BaseModelImpl<LCSProject>
	implements LCSProjectModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a l c s project model instance should use the {@link LCSProject} interface instead.
	 */
	public static final String TABLE_NAME = "OSBLCS_LCSProject";
	public static final Object[][] TABLE_COLUMNS = {
			{ "lcsProjectId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "sourceSystemName", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "organizationId", Types.BIGINT },
			{ "addressId", Types.BIGINT },
			{ "accountEntryId", Types.BIGINT },
			{ "corpProjectId", Types.BIGINT },
			{ "contactEmailAddress", Types.VARCHAR },
			{ "phoneNumber", Types.VARCHAR },
			{ "subscriptionActive", Types.BOOLEAN },
			{ "archived", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("lcsProjectId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("sourceSystemName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("organizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("addressId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("accountEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("corpProjectId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("contactEmailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("phoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("subscriptionActive", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("archived", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table OSBLCS_LCSProject (lcsProjectId LONG not null primary key,createDate DATE null,modifiedDate DATE null,sourceSystemName VARCHAR(75) null,name VARCHAR(75) null,organizationId LONG,addressId LONG,accountEntryId LONG,corpProjectId LONG,contactEmailAddress VARCHAR(75) null,phoneNumber VARCHAR(75) null,subscriptionActive BOOLEAN,archived BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table OSBLCS_LCSProject";
	public static final String ORDER_BY_JPQL = " ORDER BY lcsProject.lcsProjectId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY OSBLCS_LCSProject.lcsProjectId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.osb.lcs.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.osb.lcs.model.LCSProject"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.osb.lcs.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.osb.lcs.model.LCSProject"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.osb.lcs.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.osb.lcs.model.LCSProject"),
			true);
	public static final long ARCHIVED_COLUMN_BITMASK = 1L;
	public static final long CORPPROJECTID_COLUMN_BITMASK = 2L;
	public static final long NAME_COLUMN_BITMASK = 4L;
	public static final long LCSPROJECTID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LCSProject toModel(LCSProjectSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LCSProject model = new LCSProjectImpl();

		model.setLcsProjectId(soapModel.getLcsProjectId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setSourceSystemName(soapModel.getSourceSystemName());
		model.setName(soapModel.getName());
		model.setOrganizationId(soapModel.getOrganizationId());
		model.setAddressId(soapModel.getAddressId());
		model.setAccountEntryId(soapModel.getAccountEntryId());
		model.setCorpProjectId(soapModel.getCorpProjectId());
		model.setContactEmailAddress(soapModel.getContactEmailAddress());
		model.setPhoneNumber(soapModel.getPhoneNumber());
		model.setSubscriptionActive(soapModel.getSubscriptionActive());
		model.setArchived(soapModel.getArchived());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LCSProject> toModels(LCSProjectSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LCSProject> models = new ArrayList<LCSProject>(soapModels.length);

		for (LCSProjectSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.osb.lcs.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.osb.lcs.model.LCSProject"));

	public LCSProjectModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _lcsProjectId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLcsProjectId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _lcsProjectId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LCSProject.class;
	}

	@Override
	public String getModelClassName() {
		return LCSProject.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("lcsProjectId", getLcsProjectId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("sourceSystemName", getSourceSystemName());
		attributes.put("name", getName());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("addressId", getAddressId());
		attributes.put("accountEntryId", getAccountEntryId());
		attributes.put("corpProjectId", getCorpProjectId());
		attributes.put("contactEmailAddress", getContactEmailAddress());
		attributes.put("phoneNumber", getPhoneNumber());
		attributes.put("subscriptionActive", getSubscriptionActive());
		attributes.put("archived", getArchived());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long lcsProjectId = (Long)attributes.get("lcsProjectId");

		if (lcsProjectId != null) {
			setLcsProjectId(lcsProjectId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String sourceSystemName = (String)attributes.get("sourceSystemName");

		if (sourceSystemName != null) {
			setSourceSystemName(sourceSystemName);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Long addressId = (Long)attributes.get("addressId");

		if (addressId != null) {
			setAddressId(addressId);
		}

		Long accountEntryId = (Long)attributes.get("accountEntryId");

		if (accountEntryId != null) {
			setAccountEntryId(accountEntryId);
		}

		Long corpProjectId = (Long)attributes.get("corpProjectId");

		if (corpProjectId != null) {
			setCorpProjectId(corpProjectId);
		}

		String contactEmailAddress = (String)attributes.get(
				"contactEmailAddress");

		if (contactEmailAddress != null) {
			setContactEmailAddress(contactEmailAddress);
		}

		String phoneNumber = (String)attributes.get("phoneNumber");

		if (phoneNumber != null) {
			setPhoneNumber(phoneNumber);
		}

		Boolean subscriptionActive = (Boolean)attributes.get(
				"subscriptionActive");

		if (subscriptionActive != null) {
			setSubscriptionActive(subscriptionActive);
		}

		Boolean archived = (Boolean)attributes.get("archived");

		if (archived != null) {
			setArchived(archived);
		}
	}

	@JSON
	@Override
	public long getLcsProjectId() {
		return _lcsProjectId;
	}

	@Override
	public void setLcsProjectId(long lcsProjectId) {
		_lcsProjectId = lcsProjectId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getSourceSystemName() {
		if (_sourceSystemName == null) {
			return StringPool.BLANK;
		}
		else {
			return _sourceSystemName;
		}
	}

	@Override
	public void setSourceSystemName(String sourceSystemName) {
		_sourceSystemName = sourceSystemName;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@JSON
	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_organizationId = organizationId;
	}

	@JSON
	@Override
	public long getAddressId() {
		return _addressId;
	}

	@Override
	public void setAddressId(long addressId) {
		_addressId = addressId;
	}

	@JSON
	@Override
	public long getAccountEntryId() {
		return _accountEntryId;
	}

	@Override
	public void setAccountEntryId(long accountEntryId) {
		_accountEntryId = accountEntryId;
	}

	@JSON
	@Override
	public long getCorpProjectId() {
		return _corpProjectId;
	}

	@Override
	public void setCorpProjectId(long corpProjectId) {
		_columnBitmask |= CORPPROJECTID_COLUMN_BITMASK;

		if (!_setOriginalCorpProjectId) {
			_setOriginalCorpProjectId = true;

			_originalCorpProjectId = _corpProjectId;
		}

		_corpProjectId = corpProjectId;
	}

	public long getOriginalCorpProjectId() {
		return _originalCorpProjectId;
	}

	@JSON
	@Override
	public String getContactEmailAddress() {
		return _contactEmailAddress;
	}

	@Override
	public void setContactEmailAddress(String contactEmailAddress) {
		_contactEmailAddress = contactEmailAddress;
	}

	@JSON
	@Override
	public String getPhoneNumber() {
		return _phoneNumber;
	}

	@Override
	public void setPhoneNumber(String phoneNumber) {
		_phoneNumber = phoneNumber;
	}

	@JSON
	@Override
	public boolean getSubscriptionActive() {
		return _subscriptionActive;
	}

	@JSON
	@Override
	public boolean isSubscriptionActive() {
		return _subscriptionActive;
	}

	@Override
	public void setSubscriptionActive(boolean subscriptionActive) {
		_subscriptionActive = subscriptionActive;
	}

	@JSON
	@Override
	public boolean getArchived() {
		return _archived;
	}

	@JSON
	@Override
	public boolean isArchived() {
		return _archived;
	}

	@Override
	public void setArchived(boolean archived) {
		_columnBitmask |= ARCHIVED_COLUMN_BITMASK;

		if (!_setOriginalArchived) {
			_setOriginalArchived = true;

			_originalArchived = _archived;
		}

		_archived = archived;
	}

	public boolean getOriginalArchived() {
		return _originalArchived;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LCSProject.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LCSProject toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LCSProject)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LCSProjectImpl lcsProjectImpl = new LCSProjectImpl();

		lcsProjectImpl.setLcsProjectId(getLcsProjectId());
		lcsProjectImpl.setCreateDate(getCreateDate());
		lcsProjectImpl.setModifiedDate(getModifiedDate());
		lcsProjectImpl.setSourceSystemName(getSourceSystemName());
		lcsProjectImpl.setName(getName());
		lcsProjectImpl.setOrganizationId(getOrganizationId());
		lcsProjectImpl.setAddressId(getAddressId());
		lcsProjectImpl.setAccountEntryId(getAccountEntryId());
		lcsProjectImpl.setCorpProjectId(getCorpProjectId());
		lcsProjectImpl.setContactEmailAddress(getContactEmailAddress());
		lcsProjectImpl.setPhoneNumber(getPhoneNumber());
		lcsProjectImpl.setSubscriptionActive(getSubscriptionActive());
		lcsProjectImpl.setArchived(getArchived());

		lcsProjectImpl.resetOriginalValues();

		return lcsProjectImpl;
	}

	@Override
	public int compareTo(LCSProject lcsProject) {
		long primaryKey = lcsProject.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LCSProject)) {
			return false;
		}

		LCSProject lcsProject = (LCSProject)obj;

		long primaryKey = lcsProject.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		LCSProjectModelImpl lcsProjectModelImpl = this;

		lcsProjectModelImpl._setModifiedDate = false;

		lcsProjectModelImpl._originalName = lcsProjectModelImpl._name;

		lcsProjectModelImpl._originalCorpProjectId = lcsProjectModelImpl._corpProjectId;

		lcsProjectModelImpl._setOriginalCorpProjectId = false;

		lcsProjectModelImpl._originalArchived = lcsProjectModelImpl._archived;

		lcsProjectModelImpl._setOriginalArchived = false;

		lcsProjectModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LCSProject> toCacheModel() {
		LCSProjectCacheModel lcsProjectCacheModel = new LCSProjectCacheModel();

		lcsProjectCacheModel.lcsProjectId = getLcsProjectId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			lcsProjectCacheModel.createDate = createDate.getTime();
		}
		else {
			lcsProjectCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			lcsProjectCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			lcsProjectCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		lcsProjectCacheModel.sourceSystemName = getSourceSystemName();

		String sourceSystemName = lcsProjectCacheModel.sourceSystemName;

		if ((sourceSystemName != null) && (sourceSystemName.length() == 0)) {
			lcsProjectCacheModel.sourceSystemName = null;
		}

		lcsProjectCacheModel.name = getName();

		String name = lcsProjectCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			lcsProjectCacheModel.name = null;
		}

		lcsProjectCacheModel.organizationId = getOrganizationId();

		lcsProjectCacheModel.addressId = getAddressId();

		lcsProjectCacheModel.accountEntryId = getAccountEntryId();

		lcsProjectCacheModel.corpProjectId = getCorpProjectId();

		lcsProjectCacheModel.contactEmailAddress = getContactEmailAddress();

		String contactEmailAddress = lcsProjectCacheModel.contactEmailAddress;

		if ((contactEmailAddress != null) &&
				(contactEmailAddress.length() == 0)) {
			lcsProjectCacheModel.contactEmailAddress = null;
		}

		lcsProjectCacheModel.phoneNumber = getPhoneNumber();

		String phoneNumber = lcsProjectCacheModel.phoneNumber;

		if ((phoneNumber != null) && (phoneNumber.length() == 0)) {
			lcsProjectCacheModel.phoneNumber = null;
		}

		lcsProjectCacheModel.subscriptionActive = getSubscriptionActive();

		lcsProjectCacheModel.archived = getArchived();

		return lcsProjectCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{lcsProjectId=");
		sb.append(getLcsProjectId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", sourceSystemName=");
		sb.append(getSourceSystemName());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", addressId=");
		sb.append(getAddressId());
		sb.append(", accountEntryId=");
		sb.append(getAccountEntryId());
		sb.append(", corpProjectId=");
		sb.append(getCorpProjectId());
		sb.append(", contactEmailAddress=");
		sb.append(getContactEmailAddress());
		sb.append(", phoneNumber=");
		sb.append(getPhoneNumber());
		sb.append(", subscriptionActive=");
		sb.append(getSubscriptionActive());
		sb.append(", archived=");
		sb.append(getArchived());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.liferay.osb.lcs.model.LCSProject");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>lcsProjectId</column-name><column-value><![CDATA[");
		sb.append(getLcsProjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sourceSystemName</column-name><column-value><![CDATA[");
		sb.append(getSourceSystemName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addressId</column-name><column-value><![CDATA[");
		sb.append(getAddressId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountEntryId</column-name><column-value><![CDATA[");
		sb.append(getAccountEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corpProjectId</column-name><column-value><![CDATA[");
		sb.append(getCorpProjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getContactEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phoneNumber</column-name><column-value><![CDATA[");
		sb.append(getPhoneNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subscriptionActive</column-name><column-value><![CDATA[");
		sb.append(getSubscriptionActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>archived</column-name><column-value><![CDATA[");
		sb.append(getArchived());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = LCSProject.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			LCSProject.class
		};
	private long _lcsProjectId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _sourceSystemName;
	private String _name;
	private String _originalName;
	private long _organizationId;
	private long _addressId;
	private long _accountEntryId;
	private long _corpProjectId;
	private long _originalCorpProjectId;
	private boolean _setOriginalCorpProjectId;
	private String _contactEmailAddress;
	private String _phoneNumber;
	private boolean _subscriptionActive;
	private boolean _archived;
	private boolean _originalArchived;
	private boolean _setOriginalArchived;
	private long _columnBitmask;
	private LCSProject _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.osb.lcs.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the LCSMetadata service. Represents a row in the &quot;OSBLCS_LCSMetadata&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.osb.lcs.model.impl.LCSMetadataModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.osb.lcs.model.impl.LCSMetadataImpl}.
 * </p>
 *
 * @author Igor Beslic
 * @see LCSMetadata
 * @see com.liferay.osb.lcs.model.impl.LCSMetadataImpl
 * @see com.liferay.osb.lcs.model.impl.LCSMetadataModelImpl
 * @generated
 */
@ProviderType
public interface LCSMetadataModel extends BaseModel<LCSMetadata> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a l c s metadata model instance should use the {@link LCSMetadata} interface instead.
	 */

	/**
	 * Returns the primary key of this l c s metadata.
	 *
	 * @return the primary key of this l c s metadata
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this l c s metadata.
	 *
	 * @param primaryKey the primary key of this l c s metadata
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the lcs metadata ID of this l c s metadata.
	 *
	 * @return the lcs metadata ID of this l c s metadata
	 */
	public long getLcsMetadataId();

	/**
	 * Sets the lcs metadata ID of this l c s metadata.
	 *
	 * @param lcsMetadataId the lcs metadata ID of this l c s metadata
	 */
	public void setLcsMetadataId(long lcsMetadataId);

	/**
	 * Returns the availability index of this l c s metadata.
	 *
	 * @return the availability index of this l c s metadata
	 */
	public long getAvailabilityIndex();

	/**
	 * Sets the availability index of this l c s metadata.
	 *
	 * @param availabilityIndex the availability index of this l c s metadata
	 */
	public void setAvailabilityIndex(long availabilityIndex);

	/**
	 * Returns the build number of this l c s metadata.
	 *
	 * @return the build number of this l c s metadata
	 */
	public int getBuildNumber();

	/**
	 * Sets the build number of this l c s metadata.
	 *
	 * @param buildNumber the build number of this l c s metadata
	 */
	public void setBuildNumber(int buildNumber);

	/**
	 * Returns the git tag of this l c s metadata.
	 *
	 * @return the git tag of this l c s metadata
	 */
	@AutoEscape
	public String getGitTag();

	/**
	 * Sets the git tag of this l c s metadata.
	 *
	 * @param gitTag the git tag of this l c s metadata
	 */
	public void setGitTag(String gitTag);

	/**
	 * Returns the portal edition of this l c s metadata.
	 *
	 * @return the portal edition of this l c s metadata
	 */
	@AutoEscape
	public String getPortalEdition();

	/**
	 * Sets the portal edition of this l c s metadata.
	 *
	 * @param portalEdition the portal edition of this l c s metadata
	 */
	public void setPortalEdition(String portalEdition);

	/**
	 * Returns the supported l c s portlet of this l c s metadata.
	 *
	 * @return the supported l c s portlet of this l c s metadata
	 */
	public int getSupportedLCSPortlet();

	/**
	 * Sets the supported l c s portlet of this l c s metadata.
	 *
	 * @param supportedLCSPortlet the supported l c s portlet of this l c s metadata
	 */
	public void setSupportedLCSPortlet(int supportedLCSPortlet);

	/**
	 * Returns the supported patching tool of this l c s metadata.
	 *
	 * @return the supported patching tool of this l c s metadata
	 */
	public int getSupportedPatchingTool();

	/**
	 * Sets the supported patching tool of this l c s metadata.
	 *
	 * @param supportedPatchingTool the supported patching tool of this l c s metadata
	 */
	public void setSupportedPatchingTool(int supportedPatchingTool);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(LCSMetadata lcsMetadata);

	@Override
	public int hashCode();

	@Override
	public CacheModel<LCSMetadata> toCacheModel();

	@Override
	public LCSMetadata toEscapedModel();

	@Override
	public LCSMetadata toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}
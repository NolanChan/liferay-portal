/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.osb.lcs.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the LCSPatchEntry service. Represents a row in the &quot;OSBLCS_LCSPatchEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.osb.lcs.model.impl.LCSPatchEntryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.osb.lcs.model.impl.LCSPatchEntryImpl}.
 * </p>
 *
 * @author Igor Beslic
 * @see LCSPatchEntry
 * @see com.liferay.osb.lcs.model.impl.LCSPatchEntryImpl
 * @see com.liferay.osb.lcs.model.impl.LCSPatchEntryModelImpl
 * @generated
 */
@ProviderType
public interface LCSPatchEntryModel extends BaseModel<LCSPatchEntry> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a l c s patch entry model instance should use the {@link LCSPatchEntry} interface instead.
	 */

	/**
	 * Returns the primary key of this l c s patch entry.
	 *
	 * @return the primary key of this l c s patch entry
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this l c s patch entry.
	 *
	 * @param primaryKey the primary key of this l c s patch entry
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the lcs patch entry ID of this l c s patch entry.
	 *
	 * @return the lcs patch entry ID of this l c s patch entry
	 */
	public long getLcsPatchEntryId();

	/**
	 * Sets the lcs patch entry ID of this l c s patch entry.
	 *
	 * @param lcsPatchEntryId the lcs patch entry ID of this l c s patch entry
	 */
	public void setLcsPatchEntryId(long lcsPatchEntryId);

	/**
	 * Returns the patch ID of this l c s patch entry.
	 *
	 * @return the patch ID of this l c s patch entry
	 */
	@AutoEscape
	public String getPatchId();

	/**
	 * Sets the patch ID of this l c s patch entry.
	 *
	 * @param patchId the patch ID of this l c s patch entry
	 */
	public void setPatchId(String patchId);

	/**
	 * Returns the name of this l c s patch entry.
	 *
	 * @return the name of this l c s patch entry
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this l c s patch entry.
	 *
	 * @param name the name of this l c s patch entry
	 */
	public void setName(String name);

	/**
	 * Returns the description of this l c s patch entry.
	 *
	 * @return the description of this l c s patch entry
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this l c s patch entry.
	 *
	 * @param description the description of this l c s patch entry
	 */
	public void setDescription(String description);

	/**
	 * Returns the patching tool version of this l c s patch entry.
	 *
	 * @return the patching tool version of this l c s patch entry
	 */
	public int getPatchingToolVersion();

	/**
	 * Sets the patching tool version of this l c s patch entry.
	 *
	 * @param patchingToolVersion the patching tool version of this l c s patch entry
	 */
	public void setPatchingToolVersion(int patchingToolVersion);

	/**
	 * Returns the incremental of this l c s patch entry.
	 *
	 * @return the incremental of this l c s patch entry
	 */
	public boolean getIncremental();

	/**
	 * Returns <code>true</code> if this l c s patch entry is incremental.
	 *
	 * @return <code>true</code> if this l c s patch entry is incremental; <code>false</code> otherwise
	 */
	public boolean isIncremental();

	/**
	 * Sets whether this l c s patch entry is incremental.
	 *
	 * @param incremental the incremental of this l c s patch entry
	 */
	public void setIncremental(boolean incremental);

	/**
	 * Returns the singular of this l c s patch entry.
	 *
	 * @return the singular of this l c s patch entry
	 */
	public boolean getSingular();

	/**
	 * Returns <code>true</code> if this l c s patch entry is singular.
	 *
	 * @return <code>true</code> if this l c s patch entry is singular; <code>false</code> otherwise
	 */
	public boolean isSingular();

	/**
	 * Sets whether this l c s patch entry is singular.
	 *
	 * @param singular the singular of this l c s patch entry
	 */
	public void setSingular(boolean singular);

	/**
	 * Returns the version of this l c s patch entry.
	 *
	 * @return the version of this l c s patch entry
	 */
	public int getVersion();

	/**
	 * Sets the version of this l c s patch entry.
	 *
	 * @param version the version of this l c s patch entry
	 */
	public void setVersion(int version);

	/**
	 * Returns the size of this l c s patch entry.
	 *
	 * @return the size of this l c s patch entry
	 */
	public long getSize();

	/**
	 * Sets the size of this l c s patch entry.
	 *
	 * @param size the size of this l c s patch entry
	 */
	public void setSize(long size);

	/**
	 * Returns the rank of this l c s patch entry.
	 *
	 * @return the rank of this l c s patch entry
	 */
	public long getRank();

	/**
	 * Sets the rank of this l c s patch entry.
	 *
	 * @param rank the rank of this l c s patch entry
	 */
	public void setRank(long rank);

	/**
	 * Returns the requirements of this l c s patch entry.
	 *
	 * @return the requirements of this l c s patch entry
	 */
	@AutoEscape
	public String getRequirements();

	/**
	 * Sets the requirements of this l c s patch entry.
	 *
	 * @param requirements the requirements of this l c s patch entry
	 */
	public void setRequirements(String requirements);

	/**
	 * Returns the component of this l c s patch entry.
	 *
	 * @return the component of this l c s patch entry
	 */
	@AutoEscape
	public String getComponent();

	/**
	 * Sets the component of this l c s patch entry.
	 *
	 * @param component the component of this l c s patch entry
	 */
	public void setComponent(String component);

	/**
	 * Returns the compatible build of this l c s patch entry.
	 *
	 * @return the compatible build of this l c s patch entry
	 */
	@AutoEscape
	public String getCompatibleBuild();

	/**
	 * Sets the compatible build of this l c s patch entry.
	 *
	 * @param compatibleBuild the compatible build of this l c s patch entry
	 */
	public void setCompatibleBuild(String compatibleBuild);

	/**
	 * Returns the product of this l c s patch entry.
	 *
	 * @return the product of this l c s patch entry
	 */
	@AutoEscape
	public String getProduct();

	/**
	 * Sets the product of this l c s patch entry.
	 *
	 * @param product the product of this l c s patch entry
	 */
	public void setProduct(String product);

	/**
	 * Returns the fixed issues of this l c s patch entry.
	 *
	 * @return the fixed issues of this l c s patch entry
	 */
	@AutoEscape
	public String getFixedIssues();

	/**
	 * Sets the fixed issues of this l c s patch entry.
	 *
	 * @param fixedIssues the fixed issues of this l c s patch entry
	 */
	public void setFixedIssues(String fixedIssues);

	/**
	 * Returns the module name of this l c s patch entry.
	 *
	 * @return the module name of this l c s patch entry
	 */
	@AutoEscape
	public String getModuleName();

	/**
	 * Sets the module name of this l c s patch entry.
	 *
	 * @param moduleName the module name of this l c s patch entry
	 */
	public void setModuleName(String moduleName);

	/**
	 * Returns the module ID of this l c s patch entry.
	 *
	 * @return the module ID of this l c s patch entry
	 */
	@AutoEscape
	public String getModuleId();

	/**
	 * Sets the module ID of this l c s patch entry.
	 *
	 * @param moduleId the module ID of this l c s patch entry
	 */
	public void setModuleId(String moduleId);

	/**
	 * Returns the tunnel web of this l c s patch entry.
	 *
	 * @return the tunnel web of this l c s patch entry
	 */
	public boolean getTunnelWeb();

	/**
	 * Returns <code>true</code> if this l c s patch entry is tunnel web.
	 *
	 * @return <code>true</code> if this l c s patch entry is tunnel web; <code>false</code> otherwise
	 */
	public boolean isTunnelWeb();

	/**
	 * Sets whether this l c s patch entry is tunnel web.
	 *
	 * @param tunnelWeb the tunnel web of this l c s patch entry
	 */
	public void setTunnelWeb(boolean tunnelWeb);

	/**
	 * Returns the build date of this l c s patch entry.
	 *
	 * @return the build date of this l c s patch entry
	 */
	public Date getBuildDate();

	/**
	 * Sets the build date of this l c s patch entry.
	 *
	 * @param buildDate the build date of this l c s patch entry
	 */
	public void setBuildDate(Date buildDate);

	/**
	 * Returns the built for of this l c s patch entry.
	 *
	 * @return the built for of this l c s patch entry
	 */
	@AutoEscape
	public String getBuiltFor();

	/**
	 * Sets the built for of this l c s patch entry.
	 *
	 * @param builtFor the built for of this l c s patch entry
	 */
	public void setBuiltFor(String builtFor);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(LCSPatchEntry lcsPatchEntry);

	@Override
	public int hashCode();

	@Override
	public CacheModel<LCSPatchEntry> toCacheModel();

	@Override
	public LCSPatchEntry toEscapedModel();

	@Override
	public LCSPatchEntry toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}